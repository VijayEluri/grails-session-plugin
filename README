INTRODUCTION
	Session-grails-plugin aims to add several standard JEE session event handling which Spring/Grails aren't propagated trough the framework
	
INSTALLATION
	There are two way to install the plugin
	
	1) Grails way
	   
	   $ grails install-plugin grails-session-0.2.zip
	   	 
	2) by hand
		
	   Create the following directory structure in your project
	   
	   You-Project-Root
	        |
	        --> plugins 
	               |
                   --> session-0.2 <- put here grails-session-0.2.zip file and unzip it into it.
	    
	   then add in your BuildConfig.groovy file
	   
	   grails.plugin.location."session-0.2" = "plugins/session-0.2/"
	   
	   witch tells to Grails where to find this plugin

USAGE
	DOWNLOAD
		You cand download the full code from here:
		
		https://gitorious.process-one.net/grails-session-plugin/grails-session-plugin
		
		git clone git+ssh://git@gitorious.process-one.net/grails-session-plugin/grails-session-plugin.git
			
	BUILD
		In order to use the plugin, add any number of *SessionListener classes to the /grails-app/conf directory and the plugin will call to proper method.
		For example:
		
		class PrintlnSessionListener {
    	
	    	def init = { session ->
	    		
	    		println "------------------------------"
	    		println "Session ${session.id} created"
	    		session.attributeNames.each {
	    			
	    			println "$it = ${session.getAttribute(it)}"
	    			
	    		}
	    		println "------------------------------"
	    	}
	    	
	    	def destroy = { session ->
	    		
	    		println "------------------------------"
	    		println "Session ${session.id} destroyed"
	    		session.attributeNames.each {
	    			
	    			println "$it = ${session.getAttribute(it)}"
	    			
	    		}
	    		println "------------------------------"
	    		
	    	}
	    	
	    	def activate = { session ->
	    		println "------------------------------"
	    		println "Session ${session.id} activated"
	    		session.attributeNames.each {
	    			
	    			println "$it = ${session.getAttribute(it)}"
	    			
	    		}
	    		println "------------------------------"
	    		
	    	}
	    	
	    	def passivate = { session ->
	    		println "------------------------------"
	    		println "Session ${session.id} will passivate"
	    		session.attributeNames.each {
	    			
	    			println "$it = ${session.getAttribute(it)}"
	    			
	    		}
	    		println "------------------------------"
	    		
	    	}
	    	
	    	def attributeAdded = { session, name, value ->
	    		println "------------------------------"
	    		println "Session ${session.id} attribute added"
	    		println "name = $name, value = $value"
	    		println "------------------------------"
	    	}
	    	
	    	def attributeRemoved = { session, name, value ->
	    		println "------------------------------"
	    		println "Session ${session.id} attribute removed"
	    		println "name = $name, old value = $value"
	    		println "------------------------------"
	    	}
	    	
	    	def attributeReplaced = { session, name, value ->
	    		println "------------------------------"
	    		println "Session ${session.id} attribute replaced"
	    		println "name = $name, old value = $value, value = ${session.getAttribute(name)}"
	    		println "------------------------------"
	    	}
        }   
	
	
	INTEGRATE WITH GRAILS
	
KNOWN ISSUES

	Session Listener is not called when a node start, this is a well know issues which its fixed in Tomcat 7 version.

	Detailed explanation here:
		 
	https://issues.apache.org/bugzilla/show_bug.cgi?id=48717

TODO
		
	
CONTACT

	Any suggestion will be wellcome
	
	Mart√≠n Schonker - mschonaker@process-one.net
	Santiago Martinez - smartinez@process-one.net
